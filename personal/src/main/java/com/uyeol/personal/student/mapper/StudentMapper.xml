<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uyeol.personal.student.mapper.StudentMapper">

	<select id="findAllStudentsWithLecture" 
	 resultType="com.uyeol.personal.student.vo.StudentSearchDetailVO">
		SELECT s.student_id, s.student_name, s.student_email, s.student_birth,
			   s.student_tel, s.enter_date, l.lecture_name, s.status
		FROM students s
			LEFT OUTER JOIN lectures l
			ON s.lecture_id = l.lecture_id
	</select>
	
	<select id="findAllStudentForUpdate" 
	 resultType="com.uyeol.personal.student.vo.StudentStatusUpdateVO">
		SELECT s.student_name, l.lecture_start_date, l.lecture_end_date
		FROM students s
			JOIN lectures l
			ON s.lecture_id = l.lecture_id
	</select>

	<select id="findAllStudents" resultType="com.uyeol.personal.student.vo.StudentVO">
		SELECT *
		FROM students
	</select>
	
	<select id="findStudentByName" parameterType="String" 
	 resultType="com.uyeol.personal.student.vo.StudentVO">
		SELECT *
		FROM students
		WHERE student_name = #{value}
	</select>
	
	<select id="findStudentDetail" parameterType="String" 
	 resultType="com.uyeol.personal.student.vo.StudentSearchDetailVO">
		SELECT s.student_id, s.student_name, s.student_email, s.student_birth,
			   s.student_tel, s.enter_date, l.lecture_name, s.status
		FROM students s
			LEFT OUTER JOIN lectures l
			ON s.lecture_id = l.lecture_id
		WHERE s.student_name = #{value}
	</select>
	
	<select id="findStudentForLogin" 
	 parameterType="com.uyeol.personal.student.vo.StudentLoginVO" 
	 resultType="com.uyeol.personal.student.vo.StudentVO">
		SELECT *
		FROM students
		WHERE student_email = #{loginEmail} AND
			  student_password = #{loginPassword}
	</select>
	
	<insert id="createStudent" parameterType="com.uyeol.personal.student.vo.StudentVO">
		INSERT INTO students (student_id, student_email, student_password, 
							  student_name, student_birth, student_tel)
		VALUES (#{studentId}, #{studentEmail}, #{studentPassword}, 
			    #{studentName}, #{studentBirth}, #{studentTel})
	</insert>
	
	<update id="updateStudentByName" parameterType="com.uyeol.personal.student.vo.StudentUpdateVO">
		UPDATE students
		<set>
			<if test="newStudentEmail != null">student_email = #{newStudentEmail},</if>
			<if test="newStudentPassword != null">student_password = #{newStudentPassword},</if>
			<if test="newStudentName != null">student_name = #{newStudentName},</if>
			<if test="newStudentBirth != null">student_birth = #{newStudentBirth},</if>
			<if test="newStudentTel != null">student_tel = #{newStudentTel},</if>
			<if test="newStatus != null">status = #{newStatus},</if>
			<if test="newLectureId != 0">lecture_id = #{newLectureId},</if>
		</set>
		WHERE student_name = #{targetName}
	</update>
	
	<delete id="deleteStudentByName" parameterType="String">
		DELETE FROM students
		WHERE student_name = #{value}
	</delete>
	
</mapper>